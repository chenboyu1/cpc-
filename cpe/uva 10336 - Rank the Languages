#include <bits/stdc++.h>

using namespace std;

string mp[1000];
int vis[1000][1000];
int r, w;
int d[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};
int cnt[26+5];

struct ch{
    char c;
    int cnt;
    ch(char c, int cnt): c(c), cnt(cnt){}
    bool operator<(const ch &tmp)const{
        return tmp.cnt < cnt || (tmp.cnt == cnt) && tmp.c > c;
    }
};

void dfs(int i, int j){
    if(i < 0 || i > r-1 || j < 0 || j > w-1) return;
    vis[i][j] = 1;
    //if(i == 7 && j == 10)printf("%d %d\n", i, j);
    for(int k = 0; k < 4; k++){
        int dx = i + d[k][0];
        int dy = j + d[k][1];
        //if(i == 7 && j == 10) printf("%d %d\n", dx, dy);
        if(dx < 0 || dx > r-1 || dy < 0 || dy > w-1) continue;
        
        if(mp[i][j] == mp[dx][dy] && !vis[dx][dy]){
            //if(i == 7 && j == 10) printf("%d %d\n", dx, dy);
            dfs(dx, dy);
        }
    }
}

int main() {
    int cas, world = 1;
    scanf("%d", &cas);
    
    while(cas--)
    {
        printf("World #%d\n", world++);
        memset(cnt, 0, sizeof(cnt));
        memset(vis, 0, sizeof(vis));
        scanf("%d%d", &r, &w);
        for(int i = 0; i < r; i++){
            cin >> mp[i];
            //cout << mp[i] << endl;
        }
        for(int i = 0; i < r; i++){
            for(int j = 0; j < w; j++){
                if(!vis[i][j]){
                    //printf("%c %d %d\n", mp[i][j], i, j);
                    cnt[mp[i][j] - 'a']++;
                    dfs(i, j);
                }
            }
        }
        vector<ch> v;
        for(int i = 0; i < 26; i++){
            if(cnt[i]) v.emplace_back('a'+i, cnt[i]);
        }
        sort(v.begin(), v.end());
        for(int i = 0; i < v.size(); i++){
            printf("%c: %d\n", v[i].c, v[i].cnt);
        }
    }
}
